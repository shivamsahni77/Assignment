pip install requests pytest jsonschema
import requests

def fetch_dog_breeds():
    response = requests.get("https://dog.ceo/api/breeds/list/all")
    return response

    import requests
import pytest
from jsonschema import validate

# Fetch dog breeds function
def fetch_dog_breeds():
    return requests.get("https://dog.ceo/api/breeds/list/all")

# Expected schema of the API response
schema = {
    "type": "object",
    "properties": {
        "message": {"type": "object"},
        "status": {"type": "string"}
    },
    "required": ["message", "status"]
}

# Test for status code validation
def test_status_code():
    response = fetch_dog_breeds()
    assert response.status_code == 200

# Test for schema validation
def test_response_schema():
    response = fetch_dog_breeds()
    validate(instance=response.json(), schema=schema)

# Test to check that the response contains breeds
def test_response_contains_breeds():
    response = fetch_dog_breeds()
    assert response.json()["message"]

# Test to check specific breeds are in the list
def test_specific_breeds_in_list():
    response = fetch_dog_breeds()
    breeds = response.json()["message"].keys()
    assert "retriever" in breeds
    assert "bulldog" in breeds

# Additional test: Check API handles invalid endpoints
def test_invalid_endpoint():
    response = requests.get("https://dog.ceo/api/breeds/invalid/endpoint")
    assert response.status_code == 404

if __name__ == "__main__":
    pytest.main()


